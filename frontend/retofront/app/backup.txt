"use client";

import React from 'react';
import { useRouter } from 'next/navigation';
import axios from 'axios';
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";

const validationSchema = Yup.object().shape({
    name: Yup.string().required("Name is required"),
    email: Yup.string().email("Invalid email address").required("Email is required"),
    phone: Yup.number().required("Phone is required"),
    address: Yup.string().required("Address is required"),
    profilePictureUrl: Yup.string().url("Invalid URL").required("Profile Picture URL is required"),
});

export default function CreateContact() {
    const router = useRouter();

    const handleSubmit = async (values) => {
        const token = localStorage.getItem('token');
        
        if (token) {
            try {
                const response = await axios.post(
                    'http://localhost:3001/contact/create',
                    values,
                    {
                        headers: {
                            Authorization: `Bearer ${token}`,
                        },
                    }
                );
                router.push('/dashboard');
            } catch (error) {
                console.error(error);
            }
        }
    };

    return (
        <div className="w-4/5 max-h-full mx-auto my-0 mt-10 bg-white shadow-xl rounded-lg text-gray-900 flex flex-col relative">
            <button className="absolute top-4 left-4 bg-gray-900 text-white px-4 py-2 rounded-lg font-semibold transform transition-all hover:-translate-y-2 duration-300 shadow-lg hover:shadow-2xl" onClick={() => router.push("/dashboard")}>Back</button>
            <div className="border rounded h-32 overflow-hidden w-full">
                <img className="object-cover object-top w-full" src='https://htmlcolorcodes.com/assets/images/colors/light-gray-color-solid-background-1920x1080.png' alt='Mountain'/>
            </div>
            <div className="mx-auto w-32 h-32 relative -mt-16 border-4 border-white rounded-full overflow-hidden">
                <img className="object-cover object-center h-32" src="" alt='Woman looking front'/>
            </div>
            <Formik
                initialValues={{
                    name: '',
                    email: '',
                    phone: '',
                    address: '',
                    profilePictureUrl: '',
                }}
                validationSchema={validationSchema}
                onSubmit={handleSubmit}
            >
                {({ errors, touched }) => (
                    <Form className="flex flex-col items-center justify-center mt-4">
                        <div className="w-3/4 mb-2">
                            <label htmlFor="name" className="block font-medium mb-1">Name</label>
                            <Field
                                type="text"
                                id="name"
                                name="name"
                                className="border rounded px-4 py-2 w-full focus:outline-none focus:ring focus:border-purple-500"
                            />
                            {errors.name && touched.name ? (
                                <div className="mt-2 text-red-500">{errors.name}</div>
                            ) : null}
                        </div>
                        <div className="w-3/4 mb-2">
                            <label htmlFor="email" className="block font-medium mb-1">Email</label>
                            <Field
                                type="email"
                                id="email"
                                name="email"
                                className="border rounded px-4 py-2 w-full focus:outline-none focus:ring focus:border-purple-500"
                            />
                            {errors.email && touched.email ? (
                                <div className="mt-2 text-red-500">{errors.email}</div>
                            ) : null}
                        </div>
                        <div className="w-3/4 mb-2">
                            <label htmlFor="phone" className="block font-medium mb-1">Phone</label>
                            <Field
                                type="tel"
                                id="phone"
                                name="phone"
                                className="border rounded px-4 py-2 w-full focus:outline-none focus:ring focus:border-purple-500"
                            />
                            {errors.phone && touched.phone ? (
                                <div className="mt-2 text-red-500">{errors.phone}</div>
                            ) : null}
                        </div>
                        <div className="w-3/4 mb-2">
                            <label htmlFor="address" className="block font-medium mb-1">Address</label>
                            <Field
                                as="textarea"
                                id="address"
                                name="address"
                                className="border rounded px-4 py-2 w-full focus:outline-none focus:ring focus:border-purple-500"
                            ></Field>
                            {errors.address && touched.address ? (
                                <div className="mt-2 text-red-500">{errors.address}</div>
                            ) : null}
                        </div>
                        <div className="w-3/4 mb-2">
                            <label htmlFor="profilePictureUrl" className="block font-medium mb-1">Profile Picture URL</label>
                            <Field
                                type="text"
                                id="profilePictureUrl"
                                name="profilePictureUrl"
                                className="border rounded px-4 py-2 w-full focus:outline-none focus:ring focus:border-purple-500"
                            />
                            {errors.profilePictureUrl && touched.profilePictureUrl ? (
                                <div className="mt-2 text-red-500">{errors.profilePictureUrl}</div>
                            ) : null}
                        </div>
                        <button type="submit" className="w-1/2 block mx-auto rounded-full bg-gray-900 font-semibold text-white px-6 py-2 transform transition-all hover:-translate-y-2 duration-300 shadow-lg hover:shadow-2xl">Create Contact</button>
                    </Form>
                )}
            </Formik>
        </div>
    );
}
